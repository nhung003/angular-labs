/// <reference types="node" />
export * from 'jsonwebtoken';
import jwt from "jsonwebtoken";
interface Options {
    sign?: jwt.SignOptions;
    verify?: jwt.VerifyOptions;
}
declare type Token = string;
export declare class JWT<T extends string | object | Buffer> {
    private secretOrPrivateKey;
    protected signOptions: jwt.SignOptions;
    protected verifyOptions: jwt.VerifyOptions;
    constructor(secretOrPrivateKey: jwt.Secret, options?: Options);
    sign(payload: T, signOptions?: jwt.SignOptions): Promise<string>;
    verify(token: Token, verifyOptions?: jwt.VerifyOptions): Promise<T>;
}
